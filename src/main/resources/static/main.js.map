{"version":3,"file":"main.js","mappings":"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","sources":["./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/map/map.component.ts","./src/app/map/map.component.html","./src/app/marker.service.ts","./src/app/shared/error-utils.ts","./src/app/solver.service.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { MapComponent } from './map/map.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: `map`,\r\n    component: MapComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'frontend';\r\n}\r\n","<app-map></app-map>\r\n<!-- <router-outlet></router-outlet> -->","import { NgModule } from '@angular/core';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MarkerService } from './marker.service';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { MapComponent } from './map/map.component';\r\nimport { NgbModalModule, NgbModule, NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { SolverService } from './solver.service';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { NgxHumanizeDurationModule, NgxHumanizerOptions } from 'ngx-humanize-duration';\r\n\r\nconst defaults: NgxHumanizerOptions = {\r\n  language: \"pt\",\r\n};\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MapComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    NgbModule,\r\n    NgbTooltipModule,\r\n    NgbModalModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    FontAwesomeModule,\r\n    NgxHumanizeDurationModule.forRoot(defaults)\r\n\r\n  ],\r\n  providers: [\r\n    MarkerService,\r\n    SolverService\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { AfterViewInit, Component, OnInit } from '@angular/core';\r\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { faClipboardList, faCrosshairs, faInfoCircle, faListCheck, faPlay, faSignsPost, faStop, faTasks, faTruckPickup } from '@fortawesome/free-solid-svg-icons';\r\nimport { NgbModal } from '@ng-bootstrap/ng-bootstrap';\r\nimport * as L from 'leaflet';\r\nimport * as _ from 'lodash';\r\nimport { interval, Subscription } from 'rxjs';\r\nimport { MarkerService } from '../marker.service';\r\nimport { ErrorUtils } from '../shared/error-utils';\r\nimport { CentroDistribuicaoDTO, Depot, SimulacaoRequest, Status, Vehicle } from '../shared/model/distribuicao-urnas-model';\r\nimport { SolverService } from '../solver.service';\r\n\r\n@Component({\r\n  selector: 'app-map',\r\n  templateUrl: './map.component.html',\r\n  styleUrls: ['./map.component.css']\r\n})\r\nexport class MapComponent implements OnInit, AfterViewInit {\r\n\r\n  public faInfoCircle = faInfoCircle;\r\n  public faStop = faStop;\r\n  public faPlay = faPlay;\r\n  public faCrosshairs = faCrosshairs;\r\n  public faTruckPickup = faTruckPickup;\r\n  public faListCheck = faListCheck;\r\n\r\n\r\n  private map: L.Map;\r\n  private layerGroup = L.layerGroup();\r\n  private updateSubscription: Subscription;\r\n  public solvingIsStarting = false;\r\n  public isSolving = false;\r\n  public statusSolucaoAtual: Status;\r\n  public form: FormGroup;\r\n  public formRotasSelecionadas: FormGroup;\r\n  public centrosDistribuicao: CentroDistribuicaoDTO[] = [];\r\n  public veiculoItinerario: Vehicle;\r\n\r\n  constructor(private markerService: MarkerService,\r\n    private solverService: SolverService,\r\n    private formBuilder: FormBuilder,\r\n    private modalService: NgbModal) { }\r\n\r\n\r\n  ngOnInit(): void {\r\n    this.solverService.getCentrosDistribuicao().subscribe(centrosDistribuicao => {\r\n      this.centrosDistribuicao = centrosDistribuicao;\r\n      this.form = this.formBuilder.group({\r\n        idCentroDistribuicao: this.getCentroDistribuicaoControl(),\r\n        quantidadeCaminhoes38m3: this.formBuilder.control(0),\r\n        quantidadeCaminhoes22m3: this.formBuilder.control(0),\r\n        quantidadeCaminhoes13m3: this.formBuilder.control(0),\r\n        quantidadeCaminhoes7_5m3: this.formBuilder.control(0),\r\n        tempoDescarregamentoMinutos: this.formBuilder.control(30, Validators.required),\r\n        tempoMaximoAtuacaoHoras: this.formBuilder.control(10, Validators.required),\r\n        tipoOtimizacaoEnum: this.formBuilder.control('MENOR_DISTANCIA', Validators.required)\r\n      })\r\n      this.formRotasSelecionadas = this.formBuilder.group({\r\n        rotasSelecionadas: this.formBuilder.array([])\r\n      })\r\n    })\r\n  }\r\n\r\n  public onRotasSelecionadasChange(event: any) {\r\n    const rotasSelecionadas = (this.formRotasSelecionadas.controls['rotasSelecionadas'] as FormArray);\r\n    const idVeiculoSelecionado = +event.target.value;\r\n    if (event.target.checked) {\r\n      rotasSelecionadas.push(this.formBuilder.control(idVeiculoSelecionado));\r\n    } else {\r\n      const index = rotasSelecionadas.controls\r\n        .findIndex(x => x.value === idVeiculoSelecionado);\r\n      rotasSelecionadas.removeAt(index);\r\n    }\r\n    this.atualizarRotasSelecionadas();\r\n  }\r\n  private atualizarRotasSelecionadas() {\r\n    const veiculosSelecionados = this.formRotasSelecionadas.value.rotasSelecionadas as number[];\r\n    this.marcarSolucaoNoMapa(this.map, this.statusSolucaoAtual, veiculosSelecionados);\r\n\r\n  }\r\n\r\n  private getCentroDistribuicaoControl() {\r\n    const centroDistribuicaoControl = this.formBuilder.control(null, Validators.required);\r\n    centroDistribuicaoControl.valueChanges.subscribe(idCentroDistribuicao => {\r\n      this.marcarCentroDistribuicaoELocaisVotacao(idCentroDistribuicao);\r\n    });\r\n    return centroDistribuicaoControl;\r\n  }\r\n\r\n  private initMap(): void {\r\n    this.map = this.buildMap();\r\n    const tiles = this.buildTiles();\r\n    tiles.addTo(this.map);\r\n    this.layerGroup.addTo(this.map);\r\n  }\r\n\r\n\r\n  private buildMap(): L.Map {\r\n    return L.map('map', {\r\n      center: [-15.782356113909074, -47.878821256477806],\r\n      zoom: 10\r\n    });\r\n  }\r\n\r\n  private buildTiles() {\r\n    return L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\r\n      maxZoom: 18,\r\n      minZoom: 10,\r\n      attribution: '&copy; <a href=\"http://www.openstreetmap.org/copyright\">OpenStreetMap</a>'\r\n    });\r\n  }\r\n\r\n  private atualizarMapa() {\r\n    this.solverService.status().subscribe(statusSolucao => {\r\n      this.marcarSolucaoNoMapa(this.map, statusSolucao);\r\n      this.statusSolucaoAtual = statusSolucao;\r\n      this.updateSolvingStatus(this.statusSolucaoAtual.isSolving);\r\n    })\r\n  }\r\n\r\n  private marcarSolucaoNoMapa(map: L.Map, status: Status, idsVehicles?: number[]): void {\r\n    this.markerService.marcarSolucaoNoMapa(this.map, status, idsVehicles);\r\n  }\r\n\r\n  private marcarCentroDistribuicaoELocaisVotacao(idCentroDistribuicao: number): void {\r\n    this.solverService.getCentroDistribuicaoELocaisVotacao(idCentroDistribuicao).subscribe(depotCustomers => {\r\n      this.markerService.marcarCentroDistribuicaoELocaisVotacao(this.layerGroup, depotCustomers);\r\n    });\r\n  }\r\n\r\n  private updateSolvingStatus(solvingStatus: boolean): void {\r\n    this.isSolving = solvingStatus;\r\n    if (!solvingStatus) {\r\n      this.updateSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n    this.initMap();\r\n  }\r\n\r\n  public startSolving(): void {\r\n    this.form.updateValueAndValidity();\r\n    if (!this.form.valid) {\r\n      ErrorUtils.displayError(\"Os dados estão inválidos para a simulação!\");\r\n      return;\r\n    }\r\n\r\n    const simulacaoRequest = this.form.value as SimulacaoRequest;\r\n    this.updateSolvingStatus(true);\r\n    this.solvingIsStarting = true;\r\n    this.solverService.startSolving(simulacaoRequest).subscribe({\r\n      next: () => {\r\n        this.solvingIsStarting = false;\r\n        this.atualizarMapa();\r\n        this.updateSubscription = interval(10000).subscribe((val) => {\r\n          this.atualizarMapa();\r\n        });\r\n      },\r\n      error: (err) => {\r\n        ErrorUtils.displayError(err);\r\n      }\r\n    });\r\n  }\r\n\r\n  public showRouteCheckbox() {\r\n    return this.isSolving === false && this.statusSolucaoAtual && this.statusSolucaoAtual.solution && this.statusSolucaoAtual.solution.vehicleList && this.statusSolucaoAtual.solution.vehicleList.length > 0;\r\n  }\r\n\r\n  public stopSolving(): void {\r\n    this.solverService.stopSolving().subscribe({\r\n      next: () => {\r\n        this.updateSolvingStatus(false);\r\n        const rotasSelecionadasArray = this.formRotasSelecionadas.get('rotasSelecionadas') as FormArray;\r\n        rotasSelecionadasArray.clear();\r\n        this.statusSolucaoAtual.solution.vehicleList.forEach(vehicle => {\r\n          rotasSelecionadasArray.push(this.formBuilder.control(vehicle.id))\r\n        })\r\n      },\r\n      error: (err) => {\r\n        ErrorUtils.displayError(err);\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  public getDistanciaFormatada(): string {\r\n    if (!_.isNil(this.statusSolucaoAtual) && !_.isNil(this.statusSolucaoAtual.solution) && !_.isNil(this.statusSolucaoAtual.solution.distanceMeters)) {\r\n      const distanceInMeters = this.statusSolucaoAtual.solution.distanceMeters;\r\n      return this.getDistanciaEmMetros(distanceInMeters)\r\n    }\r\n    return '0Km'\r\n  }\r\n\r\n  public getDistanciaEmMetros(distanceInMeters: number): string {\r\n    if (distanceInMeters) {\r\n      return `${Math.floor(distanceInMeters / 1000)}km ${distanceInMeters % 1000}m`;\r\n    }\r\n    return '0Km';\r\n  }\r\n\r\n  public getTempoEmHorasEMinutos(timeInMilis: number): string {\r\n    if (timeInMilis) {\r\n\r\n    }\r\n    return '0h';\r\n  }\r\n\r\n  public getIdCrossHairDepot(depot: Depot): string {\r\n    return 'crosshairs-depot-' + depot.id;\r\n  }\r\n\r\n  public getIdCrossHairVehicle(vehicle: Vehicle): string {\r\n    return 'crosshairs-vehicle-' + vehicle.id;\r\n  }\r\n\r\n\r\n  public getDepotStyle(depot: Depot): string {\r\n    return `background-color: ${this.markerService.getDepotColorById(depot.id)}; display: inline-block; width: 1rem; height: 1rem; text-align: center`\r\n  }\r\n\r\n  public getVehicleStyle(vehicle: Vehicle): string {\r\n    return `background-color: ${this.markerService.getVehicleColorById(vehicle.id)}; display: inline-block; width: 1rem; height: 1rem; text-align: center`\r\n  }\r\n\r\n  public getVehicleTitle(vehicle: Vehicle): string {\r\n    return `Carga: ${vehicle.totalDemand}<br/>Capacity: ${vehicle.capacity}`;\r\n  }\r\n\r\n  public getVehicleProgressBarStyle(vehicle: Vehicle): string {\r\n    return `width: ${(vehicle.totalDemand / vehicle.capacity) * 100}%`;\r\n  }\r\n\r\n  public abrirItinerario(content, vehicle: Vehicle): void {\r\n    this.veiculoItinerario = vehicle;\r\n    this.modalService.open(content, { ariaLabelledBy: 'modal-basic-title' }).result.then((result) => {\r\n    }, (reason) => {\r\n    });\r\n\r\n  }\r\n\r\n}","<div class=\"sticky-top d-flex justify-content-center align-items-center\">\r\n    <div id=\"notificationPanel\" style=\"position: absolute; top: .5rem;\"></div>\r\n</div>\r\n\r\n<div class=\"container-fluid\">\r\n    <div class=\"row\">\r\n        <div class=\"col-6 col-lg-7 col-xl-8\">\r\n            <!-- <div class=\"map-container\">\r\n                <div class=\"map-frame\"> -->\r\n            <div id=\"map\" style=\"width: 100%; height: 100vh;\"></div>\r\n            <!-- </div>\r\n            </div> -->\r\n        </div>\r\n        <div class=\"col-6 col-lg-5 col-xl-4\" style=\"height: 100vh; overflow-y: scroll;\">\r\n            <fieldset *ngIf=\"form\" [formGroup]=\"form\">\r\n                <legend>Dados para simulação</legend>\r\n                <div class=\"row\">\r\n                    <div class=\"row pt-2 row-cols-1\">\r\n                        <div class=\"col-12\">\r\n                            <label for=\"idCentroDistribuicao\">Centro de Distribuição</label>\r\n                            <select class=\"form-control\" formControlName=\"idCentroDistribuicao\">\r\n                                <option *ngFor=\"let centroDistribuicao of centrosDistribuicao\"\r\n                                    value={{centroDistribuicao.id}}>\r\n                                    {{centroDistribuicao.nome}} - ({{centroDistribuicao.totalDeUrnas}})\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row pt-2 row-cols-1\">\r\n                        <div class=\"col-6\">\r\n                            <label for=\"quantidadeCaminhoes38m3\">Veículos 38m3 (730)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"quantidadeCaminhoes38m3\"\r\n                                min=\"0\" />\r\n                        </div>\r\n                        <div class=\"col-6\">\r\n                            <label for=\"quantidadeCaminhoes22m3\">Veículos 22m3 (422)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"quantidadeCaminhoes22m3\"\r\n                                min=\"0\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row pt-2 row-cols-1\">\r\n                        <div class=\"col-6\"> <label for=\"quantidadeCaminhoes13m3\">Veículos 13m3 (249)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"quantidadeCaminhoes13m3\"\r\n                                min=\"0\" />\r\n                        </div>\r\n                        <div class=\"col-6\"> <label for=\"quantidadeCaminhoes7_5m3\">Veículos 7,5m3 (144)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"quantidadeCaminhoes7_5m3\"\r\n                                min=\"0\" />\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"row pt-2 row-cols-1\">\r\n                        <div class=\"col-6\"> <label for=\"tempoDescarregamentoMinutos\">Tempo descarregamento\r\n                                (minutos)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"tempoDescarregamentoMinutos\"\r\n                                min=\"1\" />\r\n                        </div>\r\n                        <div class=\"col-6\"> <label for=\"tempoMaximoAtuacaoHoras\">Tempo máximo atuação (horas)</label>\r\n                            <input type=\"number\" class=\"form-control\" formControlName=\"tempoMaximoAtuacaoHoras\"\r\n                                min=\"1\" />\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"row pt-2 row-cols-1\">\r\n                        <div class=\"col-12\">\r\n                            <label for=\"tipoOtimizacaoEnum\">Tipo de otimização</label>\r\n                            <select class=\"form-control\" formControlName=\"tipoOtimizacaoEnum\">\r\n                                <option value=\"MENOR_DISTANCIA\" selected>\r\n                                    Menor distância\r\n                                </option>\r\n                                <option value=\"MENOR_TEMPO\">\r\n                                    Menor tempo\r\n                                </option>\r\n                            </select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <div class=\"row pt-2 row-cols-1\">\r\n                <div class=\"col mb-3\">\r\n                    <button id=\"solveButton\" type=\"button\" class=\"btn btn-success\" (click)=\"startSolving()\"\r\n                        *ngIf=\"!isSolving\">\r\n                        <fa-icon [icon]=\"faPlay\"></fa-icon> Resolver\r\n                    </button>\r\n                    <button id=\"stopSolvingButton\" type=\"button\" class=\"btn btn-danger\" (click)=\"stopSolving()\"\r\n                        *ngIf=\"isSolving && !solvingIsStarting\">\r\n                        <fa-icon [icon]=\"faStop\"></fa-icon> Parar resolução\r\n                    </button>\r\n                    <div *ngIf=\"solvingIsStarting\">\r\n                        <div class=\"spinner-border text-primary\" role=\"status\">\r\n                        </div>\r\n                        <span>Preparando para calcular rotas...</span>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h5>\r\n                        Resumo da solução\r\n                        <a href=\"#\" class=\"float-right\" data-toggle=\"modal\" data-target=\"#scoreDialog\">\r\n                            <fa-icon [icon]=\"faInfoCircle\"></fa-icon>\r\n                        </a>\r\n                    </h5>\r\n                    <table class=\"table\">\r\n                        <tr>\r\n                            <td>Score:</td>\r\n                            <td><span id=\"score\">{{statusSolucaoAtual?.solution?.score}}</span></td>\r\n                        </tr>\r\n                        <tr>\r\n                            <td>Distância total percorrida:</td>\r\n                            <td><span id=\"distance\">{{getDistanciaFormatada()}}</span></td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\">\r\n                    <h5>Centro de Distribuição</h5>\r\n                    <table class=\"table-sm w-100\" *ngIf=\"statusSolucaoAtual?.solution?.depotList\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"col-1\"></th>\r\n                                <th class=\"col-11\">Nome</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"depots\">\r\n                            <tr *ngFor=\"let depot of statusSolucaoAtual.solution.depotList\">\r\n                                <td>\r\n                                    <fa-icon [icon]=\"faCrosshairs\" [id]='getIdCrossHairDepot(depot)'\r\n                                        [style]=\"getDepotStyle(depot)\"></fa-icon>\r\n                                </td>\r\n                                <td>{{depot.name}}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div class=\"col\" *ngIf=\"formRotasSelecionadas\" [formGroup]=\"formRotasSelecionadas\">\r\n                    <h5>Veículos</h5>\r\n                    <table class=\"table-sm w-100\" *ngIf=\"statusSolucaoAtual?.solution?.vehicleList\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th class=\"col-1\"></th>\r\n                                <th class=\"col-2\">Nome</th>\r\n                                <th class=\"col-3\">\r\n                                    Carga\r\n                                    <fa-icon [icon]=\"faInfoCircle\" placement=\"top\"\r\n                                        ngbTooltip=\"Carga dos veículos mostrada na forma Carga total / Capacidade.\">\r\n                                    </fa-icon>\r\n                                </th>\r\n                                <th class=\"col-2\">Distância</th>\r\n                                <th class=\"col-2\">Tempo</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody id=\"vehicles\">\r\n                            <tr *ngFor=\"let vehicle of statusSolucaoAtual.solution.vehicleList; let i=index\">\r\n                                <td class=\"command-column\"><input type=\"checkbox\" formArrayName=\"rotasSelecionadas\"\r\n                                        [value]=\"vehicle.id\" (change)=\"onRotasSelecionadasChange($event)\" checked\r\n                                        *ngIf=\"showRouteCheckbox()\" />\r\n                                    <fa-icon [icon]=\"faListCheck\" (click)=\"abrirItinerario(content, vehicle)\"\r\n                                        style=\"cursor: pointer\" *ngIf=\"showRouteCheckbox()\"></fa-icon>\r\n                                    <fa-icon [icon]=\"faTruckPickup\" [id]=' getIdCrossHairVehicle(vehicle)'\r\n                                        [style]=\"getVehicleStyle(vehicle)\"></fa-icon>\r\n                                </td>\r\n                                <td>Veículo {{vehicle.id}}</td>\r\n                                <td>\r\n                                    <div class=\"progress\" data-toggle=\"tooltip-load\" data-placement=\"left\"\r\n                                        data-html=\"true\" [title]=\"getVehicleTitle(vehicle)\">\r\n                                        <div class=\"progress-bar\" role=\"progressbar\"\r\n                                            [style]=\"getVehicleProgressBarStyle(vehicle)\">\r\n                                            {{vehicle.totalDemand}}/{{vehicle.capacity}}</div>\r\n                                    </div>\r\n                                </td>\r\n                                <td>{{getDistanciaEmMetros(vehicle.totalDistanceMeters)}}</td>\r\n                                <td>{{vehicle.totalTimeMilis | humanizeDuration:{ delimiter: ' e ', largest:2 } }}</td>\r\n                            </tr>\r\n\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<div class=\"modal fade\" id=\"scoreDialog\" tabindex=\"-1\" role=\"dialog\">\r\n    <div class=\"modal-dialog modal-lg\" role=\"dialog\">\r\n        <div class=\"modal-content\">\r\n            <div class=\"modal-header\">\r\n                <h5>Score explanation</h5>\r\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\r\n                    <span>&times;</span>\r\n                </button>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <pre id=\"scoreInfo\">\r\n        </pre>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<ng-template #content let-modal>\r\n    <div class=\"modal-header\">\r\n        <h5 class=\"modal-title\" id=\"modal-basic-title\">Locais de Votação - Veículo {{veiculoItinerario.id}}</h5>\r\n        <button type=\"button\" class=\"btn-close\" aria-label=\"Close\" (click)=\"modal.dismiss('Cross click')\"></button>\r\n    </div>\r\n    <div class=\"modal-body\">\r\n        <h5>Saída : {{veiculoItinerario.depot.name}}</h5>\r\n        <table>\r\n            <thead>\r\n                <th>\r\n                    Número\r\n                </th>\r\n                <th>\r\n                    Nome\r\n                </th>\r\n                <th>\r\n                    Endereço\r\n                </th>\r\n\r\n            </thead>\r\n            <tbody>\r\n                <tr *ngFor=\"let customer of veiculoItinerario.customerList\">\r\n                    <td>{{customer.id}}</td>\r\n                    <td>{{customer.name}}</td>\r\n                    <td>{{customer.location.endereco}}</td>\r\n                </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>\r\n    <div class=\"modal-footer\">\r\n        <button type=\"button\" class=\"btn btn-outline-dark\" (click)=\"modal.close('Save click')\">Fechar</button>\r\n    </div>\r\n</ng-template>","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport * as L from 'leaflet';\r\nimport * as _ from 'lodash';\r\nimport 'leaflet-routing-machine';\r\nimport { Customer, Depot, DepotCustomers, Location, Status, VehicleRoutingSolution } from './shared/model/distribuicao-urnas-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class MarkerService {\r\n\r\n  private colorMap = new Map<number, string>();\r\n  private vehicleColorMap = new Map<number, string>();\r\n  private routeControls : L.Control[] = [];\r\n\r\n  private letters = '0123456789ABCDEF';\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public marcarCentroDistribuicaoELocaisVotacao(layerGroup: L.LayerGroup, depotCustomer: DepotCustomers): void {\r\n    if (depotCustomer) {\r\n      layerGroup.clearLayers();\r\n      this.adicionaCentroDeDistribuicao(depotCustomer.depot, layerGroup);\r\n      this.adicionaLocaisDeVotacao(depotCustomer.customerList, layerGroup);\r\n    }\r\n  }\r\n\r\n  public marcarSolucaoNoMapa(map: L.Map, statusSolucao: Status, idsVehicles?: number[]): void {\r\n    if (this.existeSolucaoComLocalizacoes(statusSolucao)) {\r\n      const solution = statusSolucao.solution;\r\n      // this.adicionaCentrosDeDistribuicao(solution, map);\r\n      // this.adicionaLocaisDeVotacao(solution.customerList, map);\r\n      this.adicionaRotas(solution, map, idsVehicles);\r\n    }\r\n  }\r\n\r\n  public adicionaRotas(solution: VehicleRoutingSolution, map: L.Map, idsVehicles?: number[]) {\r\n    this.routeControls.forEach(routeControl => {\r\n      map.removeControl(routeControl);\r\n    });\r\n    solution.vehicleList.forEach(vehicle => {\r\n      if ((_.isNil(idsVehicles) || idsVehicles.length === 0) || (!_.isNil(idsVehicles) && idsVehicles.indexOf(vehicle.id) != -1)) {\r\n        if (!_.isNil(vehicle.customerList) && vehicle.customerList.length > 0) {\r\n          var visits: L.LatLng[] = [];\r\n          vehicle.route.forEach(location => {\r\n            visits.push(this.buildLatLongFromLocation(location));\r\n          });\r\n          const vehicleColor = this.getVehicleColorById(vehicle.id);\r\n          const lineOptions: L.Routing.LineOptions = {\r\n            extendToWaypoints: true,\r\n            missingRouteTolerance: 10,\r\n            styles: [{\r\n              color: vehicleColor,\r\n              weight: 5\r\n            }]\r\n          }\r\n          const rota = L.Routing.control({\r\n            show: false,\r\n            waypoints: visits,\r\n            pointMarkerStyle: { color: vehicleColor },\r\n            lineOptions: lineOptions,\r\n            routeWhileDragging: false,\r\n          });\r\n          this.routeControls.push(rota);\r\n          rota.addTo(map);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  private buildLatLongFromLocation(location: Location) {\r\n    return L.latLng(location.latitude, location.longitude);\r\n  }\r\n\r\n  private adicionaLocaisDeVotacao(customerList: Customer[], layerGroup: L.LayerGroup) {\r\n    customerList.forEach(customer => {\r\n      const latLong: L.LatLngExpression = [customer.location.latitude, customer.location.longitude];\r\n      const options: L.MarkerOptions = {\r\n        title: customer.name + ' - ' + customer.id\r\n      };\r\n      const popup: L.Content = this.montaPopupLocalVotacao(customer);\r\n      const marcador = L.circleMarker(latLong, options).bindPopup(popup);\r\n      marcador.addTo(layerGroup);\r\n    });\r\n  }\r\n\r\n  private montaPopupLocalVotacao(customer: Customer): L.Content {\r\n    const popup: L.Content = `<h5>LV ${customer.id} - ${customer.name}</h5>\r\n            <div>${customer.location.endereco}</div>`\r\n    return popup;\r\n  }\r\n\r\n  // private adicionaCentrosDeDistribuicao(solution: VehicleRoutingSolution, map: L.Map) {\r\n  //   solution.depotList.forEach(depot => {\r\n  //     this.adicionaCentroDeDistribuicao(depot, map);\r\n  //   });\r\n  // }\r\n\r\n  private adicionaCentroDeDistribuicao(depot: Depot, layerGroup: L.LayerGroup) {\r\n    const latLong: L.LatLngExpression = [depot.location.latitude, depot.location.longitude];\r\n    const options: L.MarkerOptions = {\r\n      title: depot.name + ' - ' + depot.id\r\n    };\r\n    const popup: L.Content = this.montaPopupCentroDistribuicao(depot);\r\n    const marcador = L.marker(latLong, options).bindPopup(popup);\r\n    marcador.addTo(layerGroup);\r\n  }\r\n\r\n  private montaPopupCentroDistribuicao(depot: Depot) {\r\n    const id = depot.id;\r\n    const name = depot.name;\r\n    const endereco = depot.location.endereco;\r\n    return this.montaPopup(id, name, endereco);\r\n  }\r\n\r\n  private montaPopup(id: number, name: string, endereco: string) {\r\n    const color = this.getDepotColorById(id);\r\n    const popup: L.Content = `<h5>CD ${id} - ${name}</h5>\r\n            <div>${endereco}</div>\r\n            <ul class=\"list-unstyled\">\r\n            <li><span style=\"background-color: ${color}; display: inline-block; width: 12px; height: 12px; text-align: center\">\r\n            </span> ${color}</li>\r\n            </ul>`;\r\n    return popup;\r\n  }\r\n\r\n  private existeSolucaoComLocalizacoes(statusSolucao: Status) {\r\n    return !_.isNil(statusSolucao) && !_.isNil(statusSolucao.solution) && !_.isNil(statusSolucao.solution.locationList) && statusSolucao.solution.locationList.length > 0;\r\n  }\r\n\r\n  public getVehicleColorById(id: number) {\r\n    if (!this.vehicleColorMap.has(id)) {\r\n      this.vehicleColorMap.set(id, this.getRandomColor());\r\n    }\r\n    return this.vehicleColorMap.get(id);\r\n  }\r\n\r\n  public getDepotColorById(id: number) {\r\n    if (!this.colorMap.has(id)) {\r\n      this.colorMap.set(id, this.getRandomColor());\r\n    }\r\n    return this.colorMap.get(id);\r\n  }\r\n\r\n  private getRandomColor(): string {\r\n    let color = '#'; // <-----------\r\n    for (var i = 0; i < 6; i++) {\r\n      color += this.letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n}\r\n","import { HttpErrorResponse } from '@angular/common/http';\r\nimport * as _ from 'lodash';\r\nimport { from, Observable, throwError as observableThrowError } from 'rxjs';\r\nimport { finalize } from 'rxjs/operators';\r\nimport swal from 'sweetalert2';\r\n\r\nexport class ErrorUtils {\r\n\r\n    static displayError(error: any, defaultMessage?: string) {\r\n        this.displayErrorAsObservable(error, defaultMessage).subscribe({\r\n            next: () => {\r\n            },\r\n            error: () => {\r\n            }\r\n        });\r\n    }\r\n\r\n    static isJson(value: HttpErrorResponse): boolean {\r\n        return (\r\n            value &&\r\n            value.headers &&\r\n            /\\bapplication\\/json\\b/.test(value.headers.get('Content-Type') || '')\r\n        );\r\n    }\r\n\r\n    static rethrowError(errorResponse: HttpErrorResponse) {\r\n        if (ErrorUtils.isJson(errorResponse)) {\r\n            return observableThrowError(() => errorResponse.error);\r\n        } else {\r\n            return observableThrowError(() => {\r\n                const erro =\r\n                {\r\n                    message:\r\n                        errorResponse.status === 404\r\n                            ? 'Recurso não encontrado'\r\n                            : errorResponse.status === 0\r\n                                ? 'Sessão expirada'\r\n                                : 'Erro ' + errorResponse.status,\r\n                    status: errorResponse.status,\r\n                }\r\n                return erro;\r\n            });\r\n        }\r\n    }\r\n\r\n    static displayErrorAsObservable(\r\n        error: HttpErrorResponse,\r\n        defaultMessage?: string\r\n    ): Observable<any> {\r\n        const err =\r\n            ErrorUtils.isJson(error)\r\n                ? error.error\r\n                : error;\r\n\r\n        let title =\r\n            !err.message || err.message === 'No message available'\r\n                ? defaultMessage || 'Erro'\r\n                : err.message;\r\n\r\n        let text = err.text && _.isString(err.text) ? `<p>${err.text}</p>` : `<p>${err}</p>`;\r\n\r\n        return from(\r\n            swal.fire({\r\n                title: title,\r\n                html: text,\r\n                icon: 'error',\r\n                confirmButtonText: 'OK',\r\n            })\r\n        ).pipe(\r\n            finalize(() => {\r\n                if (err.status === 0) {\r\n                    window.location.href = window.location.href;\r\n                }\r\n            })\r\n        );\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { CentroDistribuicaoDTO, DepotCustomers, SimulacaoRequest, Status } from './shared/model/distribuicao-urnas-model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class SolverService {\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public status(): Observable<Status> {\r\n    return this.http.get<Status>(\"/vrp/status\");\r\n  }\r\n\r\n  public startSolving(simulacaoRequest: SimulacaoRequest): Observable<void> {\r\n    return this.http.post<void>(\"/vrp/solve\", simulacaoRequest);\r\n  }\r\n\r\n  public stopSolving(): Observable<void> {\r\n    return this.http.post<void>(\"/vrp/stopSolving\", {});\r\n  }\r\n\r\n  public getCentrosDistribuicao(): Observable<CentroDistribuicaoDTO[]> {\r\n    return this.http.get<CentroDistribuicaoDTO[]>(\"/vrp/centros-distribuicao\", {});\r\n  }\r\n\r\n  public getCentroDistribuicaoELocaisVotacao(idCentroDistribuicao: number): Observable<DepotCustomers> {\r\n    return this.http.get<DepotCustomers>(`/vrp/depot-customers/${idCentroDistribuicao}`, {});\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"names":[],"sourceRoot":"webpack:///","x_google_ignoreList":[]}